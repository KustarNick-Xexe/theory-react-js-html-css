//ссылочное равенство
//кэширование операций

//сохраняет результат вычисления и возвращает его при 
//следующих рендерах, если входные данные не изменились

const result = useMemo(() => {
    //вычисляется результат на основе data
    return data;
}, [data]); //если data не изменился, то при повторном
//рендеринге возвращается 

//может заменить useCallback, но читаемость падает

//сохраняет вычисленное значение
const something = useMemo(() => () => {}, [])
//вместо
//сохраняет ссылку на функцию
const another = useCallback(() => {}, [])

//использовать с useEffect
const [value, setValue] = useState(null)

const memoValue = useMemo(() => {
    //вычисляется результат на основе value
    return value;
}, [value]);

useEffect(() => {
    //обычные вычисления
}, [memoValue])

